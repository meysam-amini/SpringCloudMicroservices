image: maven:3.8.5-openjdk-17

stages:
  - build
  - unit_tests
  - integration_tests
  - deploy

#services:
#  - docker:dind

cache:
  paths:
    - .m2/repository

#variables:
#  MAVEN_CLI_OPTS: ""
#  DOCKER_DRIVER: overlay2
#  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode --errors --fail-at-end --show-version"

before_script:
#  - export $(grep -v '^#' root/meysam/projects/springcloudmicroservices/.env | xargs)
#  - env | grep DEV_
#  - docker network create meysam-docker
#  - echo "Docker network 'meysam-docker' created."
#  - git remote set-url origin http://163.5.94.91/meysam-team/springcloudmicroservices.git
#  - echo "Setting up Maven environment"
#  - mvn $MAVEN_CLI_OPTS --version

build:
  stage: build
  tags:
    - maven
  script:
    - echo "Building the project with dev profile..."
    - mvn clean package -Pdev -Dmaven.test.skip=true
  artifacts:
    paths:
      - target/*.jar
  only:
    changes:
      - src/**/*
#      - Dockerfile
      - pom.xml
    refs:
      - dev

unit_tests:
  stage: unit_tests
  tags:
    - maven
  script:
    - echo "Running Unit Tests..."
    - mvn test
  only:
    changes:
      - src/**/*
      #      - Dockerfile
      - pom.xml
    refs:
      - dev

integration_tests:
  stage: integration_tests
  tags:
    - maven
  script:
    - echo "Running Integration Tests with dev profile..."
#    - echo "Waiting for PostgreSQL to be ready..."
#    - until curl postgres:5432; do echo "Waiting for PostgreSQL..."; sleep 5; done
#    - echo "PostgreSQL is up!"
    - mvn -Pdev -Dskip.ut=true verify
  only:
    - main

deploy:
#  stage: deploy
#  tags:
#    - maven
#  only:
#    - main
#  script:
#    - echo "Deploying to production server with prod profile..."
#    - mvn clean package -Pprod -Dmaven.test.skip=true
#    # Add your deployment scripts here\

  stage: deploy
  tags:
    - maven
  script:
    - echo "Building Docker images..."
    - docker-compose build
    - echo "Deploying containers..."
    - docker-compose up -d
