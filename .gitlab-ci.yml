image: $CI_REGISTRY/maven:21

stages:
  - build
  - unit_tests
  - integration_tests
  - deploy


variables:
#  CI_REGISTRY: "163.5.94.91:5000" # Your Docker registry
  MODULES: "backoffice-webapi " # Define the list of modules to build and push

# Cache Maven dependencies
cache:
  paths:
    - .m2/repository

before_script:
  # Docker login step to authenticate to the private Docker registry
  - echo $CI_REGISTRY_PASSWORD | docker login 163.5.94.91:5000 --username $CI_REGISTRY_USERNAME --password-stdin


build:
  stage: build
  tags:
    - maven
  script:
    - echo "Building the project with dev profile..."
    - mvn clean package -Pdev -Dmaven.test.skip=true
  artifacts:
    paths:
      - target/*.jar
  only:
    changes:
      - src/**/*
      - Dockerfile
      - pom.xml
    refs:
      - dev

unit_tests:
  stage: unit_tests
  tags:
    - maven
  script:
    - echo "Running Unit Tests..."
    - mvn test
  only:
    changes:
      - src/**/*
      - Dockerfile
      - pom.xml
    refs:
      - dev

integration_tests:
  stage: integration_tests
  tags:
    - maven
  script:
    - echo "Running Integration Tests with dev profile..."
    - mvn -Pdev -Dskip.ut=true verify
  only:
    - main

deploy:
  stage: deploy
  tags:
    - maven
  script:
    - echo "Building and pushing Docker images for modules: $MODULES"
    - |-
        for MODULE in $MODULES; do
          echo "Building Docker image for $MODULE..."
          docker-compose -f docker-compose.yml build $MODULE  # Build each service in Docker Compose
          echo "Tagging and pushing image $CI_REGISTRY/$MODULE:latest..."
          docker tag $MODULE:latest $CI_REGISTRY/$MODULE:latest  # Tag image for registry
          docker push $CI_REGISTRY/$MODULE:latest  # Push image to registry
        done
    - echo "Pulling images and deploying containers with Docker Compose..."
    - docker-compose pull  # Ensure all services use the latest images
    - docker-compose up -d  # Start containers with the latest images
  only:
    - main
