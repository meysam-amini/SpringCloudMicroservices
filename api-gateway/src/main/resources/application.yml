server:
  port: 8082

eureka:
  client:
    service-url:
      # the url by which the client apps communicate with Eureka server
      defaultZone: http://localhost:8010/eureka

spring:
  application:
    name: api-gateway

#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"

#logging.level.io.github.resilience4j: DEBUG
#
#resilience4j.circuitbreaker:
#  configs:
#    default:
#      slidingWindowSize: 10
#      minimumNumberOfCalls: 5
#      permittedNumberOfCallsInHalfOpenState: 3
#      automaticTransitionFromOpenToHalfOpenEnabled: true
#      waitDurationInOpenState: 2s
#      failureRateThreshold: 5
#      eventConsumerBufferSize: 10
#      slowCallDurationThreshold: 200ms
#      slowCallRateThreshold: 30
#      recordExceptions:
#        - org.springframework.web.client.HttpServerErrorException
#        - java.io.IOException
#        - org.springframework.web.server.ResponseStatusException
#      ignoreExceptions:
#        - java.lang.IllegalStateException
#    shared:
#      slidingWindowSize: 100
#      permittedNumberOfCallsInHalfOpenState: 30
#      waitDurationInOpenState: 10s
#      failureRateThreshold: 50
#      eventConsumerBufferSize: 10
#      ignoreExceptions:
#        - java.lang.IllegalStateException
#  instances:
#    backendA:
#      baseConfig: default
#    backendB:
#      slidingWindowSize: 10
#      minimumNumberOfCalls: 10
#      permittedNumberOfCallsInHalfOpenState: 30
#      waitDurationInOpenState: 10s
#      failureRateThreshold: 50
#      eventConsumerBufferSize: 10
#      recordFailurePredicate: com.meysam.apigateway.filter.HttpInternalServicePredicate
#
#resilience4j.timelimiter:
#  time-limiter-aspect-order: 398
#  configs:
#    default:
#      timeoutDuration: 10s
#      cancelRunningFuture: false
#  instances:
#    backendB:
#      timeoutDuration: 11250ms


  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
#      default-filters:
#        - name: RequestRateLimiter
#          args:
#            redis-rate-limiter:
#              replenishRate: 10
#              burstCapacity: 20
#              requestedTokens: 1
      discovery:
        locator:
          # to enable discovery locator feature, so our gateway will try to
          # map requests to a service that is registered with Eureka and we
          # dont need any configs for routing:
          #####################################################
          enabled: true
          lower-case-service-id: true
          #####################################################
      routes:
        - id: members_public_apis
        # lb: load-balancer. In this way, API gateway will fetch service socket
        # address from Eureka by service's registered name (MS app name: users-ws)
        # and use built in load-balancer client and rout requests to one of the
        # running instances of this MS
          uri: lb://users-ws
          predicates:
            #If the request URl path matches below, routing will work:
            - Path=/public/member/**
            # Only if HTTP method was GET,POST routing will work:
            - Method=Get,Post
          filters:
            # our MS doesn't need request cookies:
            - RemoveRequestHeader=Cookie
#            - AuthorizationHeaderFilter=Cookie

        - id: members_authenticated_apis
          uri: lb://users-ws
          predicates:
            - Path=/member/asset/**
            - Header=Authorization, Bearer (.*)
            - Method=Get,Post
          filters:
            - RemoveRequestHeader=Cookie
#            - AuthorizationHeaderFilter=Cookie

        - id: backoffice-ws
          uri: lb://backoffice-ws
          predicates:
            - Path=/**
            - Method=Get,Post
#          filters:
#            - StatusCodeCheck
#            - name: CircuitBreaker
#              args:
#                name: backoffice
#                fallbackuri: forward:/fallback/testInternalServiceError
#            - name: Retry
#              args:
#                retries: 3
#                method: GET
#                backoff:
#                  firstBackoff: 50ms
#                  maxBackoff: 500ms
#      filter:
#        hystrix:
#          enabled: true

#hystrix:
#  command:
#    fallbackcmd:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000
#resilience4j:
#  circuitbreaker:
#    instances:
#      backoffice-ws:
#        slidingWindowSize: 10
#        permittedNumberOfCallsInHalfOpenState: 5
#        failureRateThreshold: 50
#        waitDurationInOpenState: 10000
#        registerHealthIndicator: true
#  timelimiter:
#    instances:
#      backoffice-ws:
#        timeoutDuration: 3s

logging:
  level:
    root: debug